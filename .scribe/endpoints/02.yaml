name: User
description: |-

  User Related Apis
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: User
      groupDescription: |-

        User Related Apis
      subgroup: ''
      subgroupDescription: ''
      title: 'List all users'
      description: 'This endpoint returns a paginated list of all users'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":59,"name":"Dr. Enoch Harber II","email":"murazik.kacey@example.net","role":"manager"},{"id":60,"name":"Lola Towne","email":"adams.selmer@example.com","role":"manager"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":10,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: User
      groupDescription: |-

        User Related Apis
      subgroup: ''
      subgroupDescription: ''
      title: 'Create New User'
      description: 'This endpoint creates a new user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's full name. Max 255 characters."
        required: true
        example: 'Jane Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email address. Must be unique and valid. Max 255 characters."
        required: true
        example: jane@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      role:
        name: role
        description: 'optional The user role. Must be one of: manager, employee, admin.'
        required: false
        example: manager
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Jane Doe'
      email: jane@example.com
      role: manager
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":61,"name":"Damien Murazik","email":"macejkovic.kacie@example.org","role":"admin"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: User
      groupDescription: |-

        User Related Apis
      subgroup: ''
      subgroupDescription: ''
      title: 'Updates Single User'
      description: 'This endpoint updates a single user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 21
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 21
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's full name. Max 255 characters."
        required: true
        example: 'Jane Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email address. Must be unique and valid. Max 255 characters."
        required: true
        example: jane@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      role:
        name: role
        description: 'optional The user role. Must be one of: manager, employee, admin.'
        required: false
        example: manager
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Jane Doe'
      email: jane@example.com
      role: manager
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":62,"name":"Damien Murazik","email":"wunsch.eldon@example.com","role":"employee"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
